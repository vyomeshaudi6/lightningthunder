type: google.api.Service
config_version: 3

http:
  rules:
    # rpc.proto
    - selector: lnrpc.Lightning.WalletBalance
      get: "/v1/balance/blockchain/{User_Id}"
    - selector: lnrpc.Lightning.ChannelBalance
      get: "/v1/balance/channels/{User_Id}"
    - selector: lnrpc.Lightning.GetTransactions
      get: "/v1/transactions/{User_Id}"
    - selector: lnrpc.Lightning.EstimateFee
      get: "/v1/transactions/fee/{User_Id}"
    - selector: lnrpc.Lightning.SendCoins
      post: "/v1/transactions/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.ListUnspent
      get: "/v1/utxos/{User_Id}"
    - selector: lnrpc.Lightning.SubscribeTransactions
      get: "/v1/transactions/subscribe/{User_Id}"
    - selector: lnrpc.Lightning.SendMany
      post: "/v1/transactions/many/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.NewAddress
      get: "/v1/newaddress/{User_Id}"
    - selector: lnrpc.Lightning.SignMessage
      post: "/v1/signmessage/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.VerifyMessage
      post: "/v1/verifymessage/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.ConnectPeer
      post: "/v1/peers/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.DisconnectPeer
      delete: "/v1/peers/{pub_key}"
    - selector: lnrpc.Lightning.ListPeers
      get: "/v1/peers/{User_Id}"
    - selector: lnrpc.Lightning.SubscribePeerEvents
      get: "/v1/peers/subscribe"
    - selector: lnrpc.Lightning.GetInfo
      get: "/v1/getinfo/{User_Id}"
    - selector: lnrpc.Lightning.GetRecoveryInfo
      get: "/v1/getrecoveryinfo/{User_Id}"
    - selector: lnrpc.Lightning.PendingChannels
      get: "/v1/channels/pending/{User_Id}"
    - selector: lnrpc.Lightning.ListChannels
      get: "/v1/channels/{User_Id}"
    - selector: lnrpc.Lightning.SubscribeChannelEvents
      get: "/v1/channels/subscribe"
    - selector: lnrpc.Lightning.ClosedChannels
      get: "/v1/channels/closed/{User_Id}"
    - selector: lnrpc.Lightning.OpenChannelSync
      post: "/v1/channels/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.OpenChannel
      post: "/v1/channels/stream/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.FundingStateStep
      post: "/v1/funding/step/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.ChannelAcceptor
      # request streaming RPC, REST not supported
    - selector: lnrpc.Lightning.CloseChannel
      delete: "/v1/channels/{channel_point.funding_txid_str}/{channel_point.output_index}"
    - selector: lnrpc.Lightning.AbandonChannel
      delete: "/v1/channels/abandon/{channel_point.funding_txid_str}/{channel_point.output_index}"
    - selector: lnrpc.Lightning.SendPayment
    - selector: lnrpc.Lightning.SendPaymentSync
      post: "/v1/channels/transactions/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.SendToRoute
      # deprecated, no REST endpoint
    - selector: lnrpc.Lightning.SendToRouteSync
      post: "/v1/channels/transactions/route/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.AddInvoice
      post: "/v1/invoices/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.ListInvoices
      get: "/v1/invoices/{User_Id}"
    - selector: lnrpc.Lightning.LookupInvoice
      get: "/v1/invoice/{r_hash_str}/{User_Id}"
    - selector: lnrpc.Lightning.SubscribeInvoices
      get: "/v1/invoices/subscribe/{User_Id}"
    - selector: lnrpc.Lightning.DecodePayReq
      get: "/v1/payreq/{pay_req}/{User_Id}"
    - selector: lnrpc.Lightning.ListPayments
      get: "/v1/payments/{User_Id}"
    - selector: lnrpc.Lightning.DeleteAllPayments
      delete: "/v1/payments"
    - selector: lnrpc.Lightning.DescribeGraph
      get: "/v1/graph/{User_Id}"
    - selector: lnrpc.Lightning.GetNodeMetrics
      get: "/v1/graph/nodemetrics/{User_Id}"
    - selector: lnrpc.Lightning.GetChanInfo
      get: "/v1/graph/edge/{chan_id}/{User_Id}"
    - selector: lnrpc.Lightning.GetNodeInfo
      get: "/v1/graph/node/{pub_key}/{User_Id}"
    - selector: lnrpc.Lightning.QueryRoutes
      get: "/v1/graph/routes/{pub_key}/{amt}/{User_Id}"
    - selector: lnrpc.Lightning.GetNetworkInfo
      get: "/v1/graph/info/{User_Id}"
    - selector: lnrpc.Lightning.StopDaemon
      post: "/v1/stop"
      body: "*"
    - selector: lnrpc.Lightning.SubscribeChannelGraph
      get: "/v1/graph/subscribe"
    - selector: lnrpc.Lightning.DebugLevel
      post: "/v1/debuglevel/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.FeeReport
      get: "/v1/fees/{User_Id}"
    - selector: lnrpc.Lightning.UpdateChannelPolicy
      post: "/v1/chanpolicy/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.ForwardingHistory
      post: "/v1/switch/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.ExportChannelBackup
      get: "/v1/channels/backup/{chan_point.funding_txid_str}/{chan_point.output_index}/{User_Id}"
    - selector: lnrpc.Lightning.ExportAllChannelBackups
      get: "/v1/channels/backup/{User_Id}"
    - selector: lnrpc.Lightning.VerifyChanBackup
      post: "/v1/channels/backup/verify/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.RestoreChannelBackups
      post: "/v1/channels/backup/restore/{User_Id}"
      body: "*"
    - selector: lnrpc.Lightning.SubscribeChannelBackups
      get: "/v1/channels/backup/subscribe"
    - selector: lnrpc.Lightning.BakeMacaroon
      post: "/v1/macaroon/{User_Id}"
      body: "*"

    # walletunlocker.proto
    - selector: lnrpc.WalletUnlocker.GenSeed
      get: "/v1/genseed/{User_Id}"
    - selector: lnrpc.WalletUnlocker.InitWallet
      post: "/v1/initwallet/{User_Id}"
      body: "*"
    - selector: lnrpc.WalletUnlocker.UnlockWallet
      post: "/v1/unlockwallet/{User_Id}"
      body: "*"
    - selector: lnrpc.WalletUnlocker.ChangePassword
      post: "/v1/changepassword/{User_Id}"
      body: "*"

    # autopilotrpc/autopilot.proto
    - selector: autopilotrpc.Autopilot.Status
      get: "/v2/autopilot/status/{User_Id}"
    - selector: autopilotrpc.Autopilot.ModifyStatus
      post: "/v2/autopilot/modify/{User_Id}"
      body: "*"
    - selector: autopilotrpc.Autopilot.QueryScores
      get: "/v2/autopilot/scores/{User_Id}"
    - selector: autopilotrpc.Autopilot.SetScores
      post: "/v2/autopilot/scores/{User_Id}"
      body: "*"

    # chainrpc/chainnotifier.proto
    - selector: chainrpc.ChainNotifier.RegisterConfirmationsNtfn
      post: "/v2/chainnotifier/register/confirmations/{User_Id}"
      body: "*"
    - selector: chainrpc.ChainNotifier.RegisterSpendNtfn
      post: "/v2/chainnotifier/register/spends/{User_Id}"
      body: "*"
    - selector: chainrpc.ChainNotifier.RegisterBlockEpochNtfn
      post: "/v2/chainnotifier/register/blocks/{User_Id}"
      body: "*"

    # invoicesrpc/invoices.proto
    - selector: invoicesrpc.Invoices.SubscribeSingleInvoice
      get: "/v2/invoices/subscribe/{r_hash}/{User_Id}"
    - selector: invoicesrpc.Invoices.CancelInvoice
      post: "/v2/invoices/cancel/{User_Id}"
      body: "*"
    - selector: invoicesrpc.Invoices.AddHoldInvoice
      post: "/v2/invoices/hodl/{User_Id}"
      body: "*"
    - selector: invoicesrpc.Invoices.SettleInvoice
      post: "/v2/invoices/settle/{User_Id}"
      body: "*"

    # routerrpc/router.proto
    - selector: routerrpc.Router.SendPaymentV2
      post: "/v2/router/send/{User_Id}"
      body: "*"
    - selector: routerrpc.Router.TrackPaymentV2
      get: "/v2/router/track/{payment_hash}/{User_Id}"
    - selector: routerrpc.Router.EstimateRouteFee
      post: "/v2/router/route/estimatefee/{User_Id}"
      body: "*"
    - selector: routerrpc.Router.SendToRoute
      # deprecated, no REST endpoint
    - selector: routerrpc.Router.SendToRouteV2
      post: "/v2/router/route/send/{User_Id}"
      body: "*"
    - selector: routerrpc.Router.ResetMissionControl
      post: "/v2/router/mc/reset/{User_Id}"
      body: "*"
    - selector: routerrpc.Router.QueryMissionControl
      get: "/v2/router/mc/{User_Id}"
    - selector: routerrpc.Router.QueryProbability
      get: "/v2/router/mc/probability/{from_node}/{to_node}/{amt_msat}/{User_Id}"
    - selector: routerrpc.Router.BuildRoute
      post: "/v2/router/route/{User_Id}"
      body: "*"
    - selector: routerrpc.Router.SubscribeHtlcEvents
      get: "/v2/router/htlcevents/{User_Id}"
    - selector: routerrpc.Router.SendPayment
      # deprecated, no REST endpoint
    - selector: routerrpc.Router.TrackPayment
      # deprecated, no REST endpoint
    - selector: routerrpc.HtlcInterceptor
      # request streaming RPC, REST not supported

    # signrpc/signer.proto
    - selector: signrpc.Signer.SignOutputRaw
      post: "/v2/signer/signraw/{User_Id}"
      body: "*"
    - selector: signrpc.Signer.ComputeInputScript
      post: "/v2/signer/inputscript/{User_Id}"
      body: "*"
    - selector: signrpc.Signer.SignMessage
      post: "/v2/signer/signmessage/{User_Id}"
      body: "*"
    - selector: signrpc.Signer.VerifyMessage
      post: "/v2/signer/verifymessage/{User_Id}"
      body: "*"
    - selector: signrpc.Signer.DeriveSharedKey
      post: "/v2/signer/sharedkey/{User_Id}"
      body: "*"

    # verrpc/verrpc.proto
    - selector: verrpc.Versioner.GetVersion
      get: "/v2/versioner/version/{User_Id}"

    # walletrpc/walletkit.proto
    - selector: walletrpc.WalletKit.ListUnspent
      post: "/v2/wallet/utxos/{User_Id}"
    - selector: walletrpc.WalletKit.LeaseOutput
      post: "/v2/wallet/utxos/lease/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.ReleaseOutput
      post: "/v2/wallet/utxos/release/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.DeriveNextKey
      post: "/v2/wallet/key/next/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.DeriveKey
      post: "/v2/wallet/key/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.NextAddr
      post: "/v2/wallet/address/next/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.PublishTransaction
      post: "/v2/wallet/tx/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.SendOutputs
      post: "/v2/wallet/send/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.EstimateFee
      get: "/v2/wallet/estimatefee/{conf_target}/{User_Id}"
    - selector: walletrpc.WalletKit.PendingSweeps
      get: "/v2/wallet/sweeps/pending/{User_Id}"
    - selector: walletrpc.WalletKit.BumpFee
      post: "/v2/wallet/bumpfee/{User_Id}"
      body: "*"
    - selector: walletrpc.WalletKit.ListSweeps
      get: "/v2/wallet/sweeps/{User_Id}"
    - selector: walletrpc.WalletKit.LabelTransaction
      post: "/v2/wallet/tx/label/{User_Id}"
      body: "*"

    # watchtowerrpc/watchtower.proto
    - selector: watchtowerrpc.Watchtower.GetInfo
      get: "/v2/watchtower/server/{User_Id}"

    # wtclientrpc/wtclient.proto
    - selector: wtclientrpc.WatchtowerClient.AddTower
      post: "/v2/watchtower/client/{User_Id}"
      body: "*"
    - selector: wtclientrpc.WatchtowerClient.RemoveTower
      delete: "/v2/watchtower/client/{pubkey}"
    - selector: wtclientrpc.WatchtowerClient.ListTowers
      get: "/v2/watchtower/client/{User_Id}"
    - selector: wtclientrpc.WatchtowerClient.GetTowerInfo
      get: "/v2/watchtower/client/info/{pubkey}/{User_Id}"
    - selector: wtclientrpc.WatchtowerClient.Stats
      get: "/v2/watchtower/client/stats/{User_Id}"
    - selector: wtclientrpc.WatchtowerClient.Policy
      get: "/v2/watchtower/client/policy/{User_Id}"
