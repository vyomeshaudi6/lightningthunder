// Code generated by protoc-gen-go. DO NOT EDIT.
// source: watchtowerrpc/watchtower.proto

package watchtowerrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetInfoRequest struct {
	User_Id              string   `protobuf:"bytes,1,opt,name=User_Id,json=UserId,proto3" json:"User_Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f019c0e859ad3d6, []int{0}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

func (m *GetInfoRequest) GetUser_Id() string {
	if m != nil {
		return m.User_Id
	}
	return ""
}

type GetInfoResponse struct {
	// The public key of the watchtower.
	Pubkey []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// The listening addresses of the watchtower.
	Listeners []string `protobuf:"bytes,2,rep,name=listeners,proto3" json:"listeners,omitempty"`
	// The URIs of the watchtower.
	Uris                 []string `protobuf:"bytes,3,rep,name=uris,proto3" json:"uris,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f019c0e859ad3d6, []int{1}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *GetInfoResponse) GetListeners() []string {
	if m != nil {
		return m.Listeners
	}
	return nil
}

func (m *GetInfoResponse) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func init() {
	proto.RegisterType((*GetInfoRequest)(nil), "watchtowerrpc.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "watchtowerrpc.GetInfoResponse")
}

func init() { proto.RegisterFile("watchtowerrpc/watchtower.proto", fileDescriptor_9f019c0e859ad3d6) }

var fileDescriptor_9f019c0e859ad3d6 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xa9, 0x95, 0x94, 0x0c, 0xfe, 0x81, 0x39, 0x68, 0x10, 0x2d, 0xa5, 0xa7, 0x7a, 0x49,
	0xc0, 0xe2, 0x17, 0xf0, 0xa2, 0xb9, 0x06, 0x54, 0xd0, 0x83, 0x98, 0x64, 0x4c, 0x96, 0xc6, 0xd9,
	0x75, 0x76, 0x42, 0xf0, 0xdb, 0x8b, 0xb1, 0xb4, 0xec, 0xc1, 0xdb, 0xbe, 0xfd, 0x3d, 0x98, 0x1f,
	0x0f, 0xe6, 0xc3, 0xbb, 0x56, 0xad, 0xda, 0x81, 0x44, 0x5c, 0x95, 0xed, 0x53, 0xea, 0xc4, 0xaa,
	0xc5, 0xe3, 0x80, 0x2f, 0xaf, 0xe1, 0xe4, 0x9e, 0x34, 0xe7, 0x0f, 0x5b, 0xd0, 0x57, 0x4f, 0x5e,
	0xf1, 0x1c, 0x66, 0x8f, 0x9e, 0xe4, 0x2d, 0xaf, 0x93, 0xc9, 0x62, 0xb2, 0x8a, 0x8b, 0xe8, 0x37,
	0xe6, 0xf5, 0xf2, 0x15, 0x4e, 0x77, 0x55, 0xef, 0x2c, 0x7b, 0xc2, 0x33, 0x88, 0x5c, 0x5f, 0x6e,
	0xe8, 0x7b, 0xac, 0x1e, 0x15, 0xdb, 0x84, 0x97, 0x10, 0x77, 0xc6, 0x2b, 0x31, 0x89, 0x4f, 0x0e,
	0x16, 0xd3, 0x55, 0x5c, 0xec, 0x3f, 0x10, 0xe1, 0xb0, 0x17, 0xe3, 0x93, 0xe9, 0x08, 0xc6, 0xf7,
	0xcd, 0x13, 0xc0, 0xf3, 0x4e, 0x0c, 0x1f, 0x60, 0xb6, 0x3d, 0x85, 0x57, 0x69, 0x20, 0x9c, 0x86,
	0xb6, 0x17, 0xf3, 0xff, 0xf0, 0x9f, 0xe1, 0xdd, 0xed, 0xcb, 0xba, 0x31, 0xda, 0xf6, 0x65, 0x5a,
	0xd9, 0xcf, 0xac, 0x33, 0x4d, 0xab, 0x6c, 0xb8, 0x61, 0xd2, 0xc1, 0xca, 0x26, 0xeb, 0xb8, 0xce,
	0x3a, 0x0e, 0x87, 0x12, 0x57, 0x95, 0xd1, 0x38, 0xd6, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0x6f,
	0x2c, 0x69, 0xef, 0x4e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatchtowerClient is the client API for Watchtower service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatchtowerClient interface {
	// lncli: tower info
	//GetInfo returns general information concerning the companion watchtower
	//including its public key and URIs where the server is currently
	//listening for clients.
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
}

type watchtowerClient struct {
	cc *grpc.ClientConn
}

func NewWatchtowerClient(cc *grpc.ClientConn) WatchtowerClient {
	return &watchtowerClient{cc}
}

func (c *watchtowerClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/watchtowerrpc.Watchtower/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WatchtowerServer is the server API for Watchtower service.
type WatchtowerServer interface {
	// lncli: tower info
	//GetInfo returns general information concerning the companion watchtower
	//including its public key and URIs where the server is currently
	//listening for clients.
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
}

func RegisterWatchtowerServer(s *grpc.Server, srv WatchtowerServer) {
	s.RegisterService(&_Watchtower_serviceDesc, srv)
}

func _Watchtower_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchtowerServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/watchtowerrpc.Watchtower/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchtowerServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Watchtower_serviceDesc = grpc.ServiceDesc{
	ServiceName: "watchtowerrpc.Watchtower",
	HandlerType: (*WatchtowerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _Watchtower_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "watchtowerrpc/watchtower.proto",
}
